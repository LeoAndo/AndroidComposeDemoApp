import com.example.templateapp01.buildsrc.Libs

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def localProperties = new Properties()
try {
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
} catch (Exception e) {
    logger.warn("No Local Properties File Found!")
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.templateapp01"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        // UNSPLASH
        if (!localProperties['unsplashAccessKey']) {
            logger.warn('You can add it to local.properties once you have gotten it from Play. ' +
                    'Example: unsplashAccessKey=[key value]')
        }
        buildConfigField("String", "UNSPLASH_ACCESS_KEY", "\"" + localProperties['unsplashAccessKey'] + "\"")
        buildConfigField "String", "UNSPLASH_API_DOMAIN", "\"https://api.unsplash.com/\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        // @InstallInチェックを無効にする設定-START
        /*
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
         */
        // @InstallInチェックを無効にする設定-END
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Libs.AndroidX.Compose.version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation Libs.AndroidX.Core.coreKtx
    implementation Libs.AndroidX.Compose.ui
    implementation Libs.AndroidX.Compose.material
    implementation Libs.AndroidX.Compose.toolingPreview
    implementation Libs.AndroidX.Lifecycle.runtimeKtx
    implementation Libs.AndroidX.Activity.activityCompose
    implementation Libs.AndroidX.Navigation.navigationCompose
    implementation Libs.Accompanist.insets
    testImplementation Libs.JUnit.junit
    androidTestImplementation Libs.AndroidX.Test.Ext.junit
    androidTestImplementation Libs.AndroidX.Test.espressoCore
    androidTestImplementation Libs.AndroidX.Compose.uiTest
    debugImplementation Libs.AndroidX.Compose.tooling
    debugImplementation Libs.AndroidX.Compose.uiTestManifest

    // Splash
    implementation Libs.AndroidX.Core.splash

    // DI module
    implementation Libs.AndroidX.Hilt.hiltNavigationCompose
    implementation Libs.Hilt.android
    kapt Libs.Hilt.compiler
    // DI: test module
    androidTestImplementation Libs.Hilt.android
    androidTestImplementation Libs.Hilt.testing
    kaptAndroidTest Libs.Hilt.compiler

    // Image
    implementation Libs.Coil.coilCompose

    // network
    implementation Libs.Retrofit.retrofit
    implementation Libs.Retrofit.moshiAdapter
    implementation Libs.OkhHttp3.okhttp
    implementation Libs.OkhHttp3.loggingInterceptor
    implementation Libs.Moshi.moshi
    implementation Libs.Moshi.moshiKotlin
    kapt Libs.Moshi.codegen

    // TODO Sequentially move to Material3.
    implementation "androidx.compose.material:material:1.0.5"
    // implementation "androidx.compose.material:material-icons-extended:1.0.5"
}